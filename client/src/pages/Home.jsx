import React, { useState, useEffect } from 'react'
import Card from '../components/Card';
import FormField from '../components/FormField';
import Loader from '../components/Loader';

const RenderCards = ({ data, title }) => {
    if (data?.length > 0) return data.slice(0, 27).map((post) =>
        <Card key={post._id} {...post} />
    )
    return (
        <h2 className="mt-5 font-bold text-xl uppercase">{title}</h2>
    )
}

const Home = () => {
    const [loading, setLoading] = useState(false);
    const [allPosts, setAllPosts] = useState(null);
    const [searchText, setSearchText] = useState("")

    const [searchTimeout, setSearchTimeout] = useState(null);
    const [searchedResults, setSearchedResults] = useState(null);

    const fetchPosts = async () => {
        setLoading(true);
        try {
            const response = await fetch('http://localhost:8080/api/v1/post', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                },
            });

            if (response.ok) {
                const result = await response.json();
                setAllPosts(result.data.reverse());
            }
        } catch (err) {
            alert(err);
        } finally {
            setLoading(false);
        }
    };

    useEffect(() => {
        fetchPosts();
    }, []);

    const handleSearchChange = (e) => {
        setSearchText(e.target.value);
        setSearchTimeout(
            setTimeout(() => {
                const searchResults = allPosts.filter((item) =>
                    item.name.toLowerCase().includes(searchText.toLowerCase()) ||
                    item.prompt.toLowerCase().includes(searchText.toLowerCase()))
                setSearchedResults(searchResults)
            }, 500)
        )
    }

    return (
        <section className="max-w-5xl mx-auto">
            <div>
                <h1 className="font-extrabold text-gray-700 text-xl">The Community Showcase
                </h1>
                <p className="mt-2 text-bs text-gray-400 max-w-screen-lg"> Hello there! Here you can browse through a collection of visually stunning images generated by DALLE-AI.
                </p>
            </div>
            <div className="mt-16">
                <FormField
                    labelName="Search posts"
                    type="text"
                    name="text"
                    placeholder="Search posts"
                    value={searchText}
                    handleChange={handleSearchChange}
                />
            </div>
            <div className="mt-10">
                {loading ? (
                    <div className="flex justify-center items-center">
                        <Loader />
                    </div>
                ) : (
                    <>
                        {searchText && (
                            <h2 className=" text-gray-400 text-bs mb-3"><i>
                                Showing results for <span className=" text-gray-600">{searchText}</span></i>
                            </h2>
                        )}
                        <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
                            {searchText ? (
                                <RenderCards
                                    data={searchedResults}
                                    title="No search resuts found :("
                                />
                            ) : (
                                <RenderCards
                                    data={allPosts}
                                    title="No posts found :("
                                />
                            )}
                        </div>
                    </>
                )}
            </div>
        </section>
    )
}

export default Home